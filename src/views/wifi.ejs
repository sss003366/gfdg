<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi"
      crossorigin="anonymous"
    />
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3"
      crossorigin="anonymous"
    ></script>
  </head>
  <body>
    <header><%- include('./header') %></header>
    <main>
      <div class="row">
        <div class="col-3">
          <select
            class="form-select"
            aria-label="Default select example"
            id="provider"
            name="provider"
            onchange="search(this);"
          >
            <option value="ALL" selected>전체</option>
            <option value="SKT">SKT</option>
            <option value="KT">KT</option>
            <option value="LGU+">LGT</option>
          </select>
        </div>
      </div>
      <br />
      <div id="map" style="width: 1200px; height: 800px"></div>
    </main>

    <script
      type="text/javascript"
      src="//dapi.kakao.com/v2/maps/sdk.js?appkey=575ac583ae27f5b537b74d0c7f564cfe"
    ></script>
    <script>
      const formSelect = document.querySelector(".form-select");
      formSelect.dispatchEvent(new Event("change"));
      // 여기서 provider 는 sel.value => ALL , SKT , KT 이런것.
      function search(sel) {
        fetch(`http://localhost:8080/wifi/${sel.value}`).then(async (res) => {
          const json = await res.json();
          drawMap(json);
        });
      }

      function drawMap(wifis) {
        const container = document.getElementById("map");
        container.innerHTML = "";
        const lats = wifis.map((wifi) => +wifi.latitude);
        const longs = wifis.map((wifi) => +wifi.longitude);

        const centerLat = lats.reduce((a, b) => a + b, 0) / lats.length;
        const centerLog = longs.reduce((a, b) => a + b, 0) / longs.length;

        const options = {
          center: new kakao.maps.LatLng(centerLat, centerLog),
          level: 5,
        };
        const map = new kakao.maps.Map(container, options);
        const positions = [];
        for (const wifi of wifis) {
          latlng = new kakao.maps.LatLng(wifi.latitude, wifi.longitude);
          positions.push({ title: wifi.inst_loc, latlng: latlng });
        }
        for (const position of positions) {
          const marker = new kakao.maps.Marker({
            map: map, // 마커를 표시할 지도
            position: position.latlng, // 마커를 표시할 위치
            title: position.title, // 마커의 타이틀, 마커에 마우스를 올리면 타이틀 표시
          });
        }
      }
    </script>
  </body>
</html>
